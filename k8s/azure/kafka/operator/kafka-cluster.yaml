apiVersion: kafka.strimzi.io/v1beta2
kind: KafkaNodePool
metadata:
  name: kafka-dual-role
  labels:
    strimzi.io/cluster: tbmq
spec:
  replicas: 3
  roles:
    - controller
    - broker
  resources:
    requests:
      memory: 2Gi
      cpu: "1"
    limits:
      memory: 2Gi
      cpu: "1"
  storage:
    type: jbod
    volumes:
      - id: 0
        type: persistent-claim
        size: 20Gi
        deleteClaim: false
        kraftMetadata: shared
      - id: 1
        type: persistent-claim
        size: 100Gi
        deleteClaim: false
  template:
    pod:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: strimzi.io/name
                    operator: In
                    values:
                      - tbmq-kafka
              topologyKey: "kubernetes.io/hostname"
---

apiVersion: kafka.strimzi.io/v1beta2
kind: Kafka
metadata:
  name: tbmq
  annotations:
    strimzi.io/node-pools: enabled
    strimzi.io/kraft: enabled
spec:
  kafka:
    version: 4.0.0
    metadataVersion: 4.0-IV3
    listeners:
      - name: plain
        port: 9092
        type: internal
        tls: false
      - name: tls
        port: 9093
        type: internal
        tls: true
    template:
      podDisruptionBudget:
        maxUnavailable: 1
    config:
      auto.create.topics.enable: "false"
      offsets.topic.replication.factor: 3
      transaction.state.log.replication.factor: 3
      transaction.state.log.min.isr: 2
      default.replication.factor: 2
      min.insync.replicas: 1
    readinessProbe:
      initialDelaySeconds: 30
      failureThreshold: 10
      timeoutSeconds: 5
      periodSeconds: 10
      successThreshold: 1
    livenessProbe:
      initialDelaySeconds: 10
      timeoutSeconds: 5
      failureThreshold: 3
      periodSeconds: 10
      successThreshold: 1
    jvmOptions:
      -Xms: 1G
      -Xmx: 1G
  entityOperator:
    topicOperator: { }
    userOperator: { }
